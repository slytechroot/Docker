Overview:
Container vs Image
Version and Tag
Docker Commands

docker pull
docker run
docker start
docker stop
docker ps
docker exec-it
docker logs

--- Container vs Image differences
Container - is a running environment for IMAGE. It has a file system, environment configs, application image.
Application image: postgres, redis, mongo.
Port binded: talk to application running inside of container.
Virtual file system.

Demo....
docker pull redis
docker images
- the tag is the version of the image.
- so far we've only worked with images, so redis is not running.

- let's get redis running, so let's create a container containing the redis image
docker run redis
docker ps
(notice the Container ID, Image, Command, Status, ports, etc).
Ctrl+X to terminate running docker container.
- run again 'docker ps' and notice that no containers are running.

- run in detached mode.
docker run -d redis
(notice the running container ID first several characters)
docker stop <container-ID>
or:
docker start <container-ID>

docker ps
docker ps -a
(will show you ALL containers running or not running)

- specify a redis version (with a tag) and start at the same time.
docker run redis:4.0

- if you noticed 2 containers running on the same port, you need to understand the difference between Container Port and Host Port.

Multiple containers can run on your host machine.
Your laptop has only certain ports available.
You will get a conflict when same port on host machine is opened. The containers can listen to the same ports, but the ports you BIND to the Host Ports, needs to be different; this is where the conflict happens. 

































